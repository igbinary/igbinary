// $Id$
// vim:ft=javascript

ARG_ENABLE("igbinary", "whether to enable igbinary support", "no");

if (PHP_IGBINARY == "yes") {
  if (CHECK_HEADER_ADD_INCLUDE("apc_serializer.h", "CFLAGS_IGBINARY", "..\\pecl\\apcu;ext\\apcu")) {
    AC_DEFINE('HAVE_APCU_SUPPORT', 1, "Whether to enable apcu support");
    if (!CHECK_HEADER_ADD_INCLUDE("apc_serializer.h", "CFLAGS_IGBINARY", "ext\\apcu")) {
      // Workaround to allow configuring and making apcu and igbinary at the same time.
      // If they aren't available in ext/apcu, expect them in ../pecl/apcu
      AC_DEFINE('HAVE_APCU_HEADERS_IN_PECL', 1, "Whether or not apcu headers exist only in pecl folder")
    }
  } else if (CHECK_HEADER_ADD_INCLUDE("apc_serializer.h", "CFLAGS_IGBINARY", "..\\pecl\\apc;ext\\apc")) {
    AC_DEFINE('HAVE_APC_SUPPORT', 1, 'Whether to enable apc support')
  }
  var dll = get_define('PHPDLL');
  var old_conf_dir = configure_module_dirname;
  var php_igbinary_src_files;

  /* Copied from solr config.w32 */
  /* XXX tricky job here, override configure_module_dirname, define the basic extension,
     then set it back*/
  if (null != dll.match(/^php5/)) {
    configure_module_dirname = configure_module_dirname + "\\src\\php5";
    php_igbinary_src_files = "igbinary.c hash_si.c"
  } else if (null != dll.match(/^php7/)) {
    configure_module_dirname = configure_module_dirname + "\\src\\php7";
    php_igbinary_src_files = "igbinary.c hash_si.c hash_si_ptr.c"
  } else {
    ERROR("Cannot match any known PHP version with '" + dll + "'");
  }
  EXTENSION("igbinary", php_igbinary_src_files);
  /* needed for PHP_REDIS_IGBINARY, copied from propro config.w32 */
  var PHP_IGBINARY_HEADERS=glob(configure_module_dirname + "/*.h");
  for (var i=0; i<PHP_IGBINARY_HEADERS.length; ++i) {
    var basename = FSO.GetFileName(PHP_IGBINARY_HEADERS[i]);
    copy_and_subst(configure_module_dirname + "/" + basename, old_conf_dir + "/" + basename, []);
  }
  configure_module_dirname = old_conf_dir;
  AC_DEFINE('HAVE_IGBINARY', 1, 'Have igbinary support', false);
  ADD_EXTENSION_DEP('igbinary', 'session');
}
